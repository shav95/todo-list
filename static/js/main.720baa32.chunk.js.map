{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","inputText","todos","setTodos","setStatus","type","value","onChange","e","target","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocalTodos","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.720baa32.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({setInputText,inputText, todos, setTodos, setStatus}) => {\r\n    const onInputChange = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id: Math.random() * 1000}\r\n        ]);\r\n        setInputText('');\r\n        \r\n    }\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n    return (\r\n        <form>\r\n            <input type=\"text\" value={inputText} onChange={onInputChange} className=\"todo-input\" />\r\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n    //Events\r\n    const dleteHandler = () => {\r\n        setTodos(todos.filter(el => el.id !== todo.id))\r\n    }\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if(item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                };\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\": \"\"}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n            <button onClick={dleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\n//Import Components\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map(todo => (\r\n                    <Todo key={todo.id} todos={todos} todo={todo} setTodos={setTodos} text={todo.text} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n//Importing Components\nimport Form from './components/Form';\nimport TodoList from './components/TodoList'\n\nfunction App() {\n  //State Stuff\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //RUN ONLY ONCE\n\n  useEffect(() => {\n    const getLocalTodos = () => {\n      if (localStorage.getItem('todos') === null) {\n        localStorage.setItem('todos', JSON.stringify([]));\n      } else {\n        let todoLocal = JSON.parse(localStorage.getItem('todos', JSON.stringify(todos)));\n        setTodos(todoLocal)\n      }\n    }\n    getLocalTodos()\n  }, [])\n\n  //Use Effect\n\n  useEffect(() => {\n    const filterHandler = () => {\n      switch (status) {\n        case \"completed\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === true));\n          break;\n        case 'uncompleted':\n          setFilteredTodos(todos.filter((todo) => todo.completed === false));\n          break;\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    }\n    //Save to local\n    const saveLocalTodos = () => {\n        localStorage.setItem('todos', JSON.stringify(todos))\n    }\n\n    filterHandler();\n    saveLocalTodos()\n  }, [todos, status])\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Shavi's Todo List </h1>\n        <Form\n          inputText={inputText}\n          todos={todos}\n          setTodos={setTodos}\n          setInputText={setInputText}\n          setStatus={setStatus}\n        />\n        <TodoList filteredTodos={filteredTodos} setTodos={setTodos} todos={todos} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}